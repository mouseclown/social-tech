<launch>

<arg name="topic_name" default="base_scan"/>
<arg name="frame_id" default="base_laser"/>
<arg name="port_name" default="/dev/ttyUSB0"/>
<arg name="port_baudrate" default="230400"/>
<arg name="fix_to_base_link" default="true"/>
<arg name="world_name" default="$(find SocialTech-Gazebo)/worlds/plano1.world"/>
<arg name="x" default="1.0"/>
<arg name="y" default="1.0"/>
<arg name="z" default="0.0"/>
<arg name="yaw" default="1.570796"/>
<arg name="serial_port" default="/dev/ttyUSB1" />
<arg name="frame_id1" default="imu_link" />
<arg name="operation_mode" default="IMU"/>
<arg name="reset_orientation" default="true" />
<arg name="frequency" default="50" /> 
<arg name="use_magnetometer" default="false" />
<arg name="use_temperature" default="false" /> 



  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />
  
  <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 odom base_link 30" />
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 30" />

    <param
    name="robot_description"
   command="$(find xacro)/xacro '$(find navstack_pub)/urdf/tracer2.xacro'" />
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 fixed_frame $(arg frame_id1)" />    
  
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
 
 <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />
  
	
  <!-- Initial Pose and Goal Publisher -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find navstack_pub)/rviz/model_display.rviz" />
  

  <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d --> 
  <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>   

 <node name="LD06" pkg="ldlidar_stl_ros" type="ldlidar_stl_ros_node" output="screen" >
  <param name="product_name" value="LDLiDAR_LD06"/>
  <param name="topic_name" value="$(arg topic_name)"/>
  <param name="frame_id" value="$(arg frame_id)"/>
  <param name="port_name" value ="$(arg port_name)"/>
  <param name="port_baudrate" value ="$(arg port_baudrate)"/>
  <param name="laser_scan_dir" type="bool" value="true"/>
  <param name="enable_angle_crop_func" type="bool" value="true"/>
  <param name="angle_crop_min" type="double" value="90"/>
  <param name="angle_crop_max" type="double" value="90"/>
 </node>
 <node name="base_to_laser" pkg="tf" type="static_transform_publisher"  args="0.34 0.0 0.18 -1.57 0.0 0.0 base_link base_laser 40" if="$(arg fix_to_base_link)"/>
  <node pkg="laser_filters" type="scan_to_scan_filter_chain"
      name="laser_filter">
    <rosparam command="load" file="$(find ldlidar_stl_ros)/launch/lidarfilter.yaml" />
     <remap from="scan" to="base_scan" />
     <remap from="scan_filtered" to="scan" />
  </node>
 
  <!-- Map File -->
  <arg name="map_file" default="/home/loyola/SocialTech_ws/src/jorin_chair/navstack_pub/maps/mapa_lab.yaml"/>
	
  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
	
  <!-- Add AMCL example for differential drive robots for Localization -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find amcl)/examples/amcl_diff.launch"/>
	
  <!-- Move Base Node -->
  <!-- Subscribe: /move_base_simple/goal -->
  <!-- Publish: /cmd_vel -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/base_local_planner_params.yaml" command="load" />
  </node>
</launch>
