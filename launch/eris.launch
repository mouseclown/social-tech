<launch>
  
<!-- TF CONFIG --> 
  <!-- TF LiDAR -->
  <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 30" />
  <node name="base_to_laser" pkg="tf" type="static_transform_publisher"  args="0.34 0.0 0.18 -1.57 0.0 0.0 base_link base_laser 40" if="true"/>
  <!-- TF ROBOT -->
  <param
    name="robot_description"
   command="$(find xacro)/xacro '$(find navstack_pub)/urdf/tracer2.xacro'" />
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
 
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />

<!-- ODOM -->
  <include file="$(find tracer_base)/launch/tracer_base.launch" >
      <arg name="port_name" default="can0" />
      <arg name="simulated_robot" default="false" />
  </include>
  
<!-- INITIAL POSE AND GOAL PUBLISHER -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find navstack_pub)/rviz/model_display.rviz" />

  <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d --> 
  <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>   
  
<!-- NODO LiDAR --> 
  <!-- Publish: /scan -->
  <node name="LD06" pkg="ldlidar_stl_ros" type="ldlidar_stl_ros_node" output="screen" >
  <param name="product_name" value="LDLiDAR_LD06"/>
  <param name="topic_name" value="base_scan"/>
  <param name="frame_id" value="base_laser"/>
  <param name="port_name" value ="/dev/ttyUSB0"/>
  <param name="port_baudrate" value ="230400"/>
  <param name="laser_scan_dir" type="bool" value="true"/>
  <param name="enable_angle_crop_func" type="bool" value="true"/>
  <param name="angle_crop_min" type="double" value="0"/>
  <param name="angle_crop_max" type="double" value="180"/>
 </node>
 
<!-- NODO FILTRO LiDAR--> 
  <node pkg="laser_filters" type="scan_to_scan_filter_chain"
      name="laser_filter">
    <rosparam command="load" file="$(find ldlidar_stl_ros)/launch/lidarfilter.yaml" />
     <remap from="scan" to="base_scan" />
     <remap from="scan_filtered" to="scan" />
  </node>
  
<!-- MAPA -->
  <arg name="map_file" default="$(find navstack_pub)/maps/mapa.yaml"/>

<!-- MAP SERVER -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
  
<!-- AMCL -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find navstack_pub)/amcl/megumin.launch"/>

<!-- MOVE BASE NODE -->
  <!-- Subscribe: /move_base_simple/goal -->
  <!-- Publish: /cmd_vel -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navstack_pub)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navstack_pub)/param/base_local_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="cmd_vel_nav" />
    <!--rosparam file="$(find navstack_pub)/param/move_base.yaml" command="load" /-->
  </node>
  
<!-- JOY -->
  <node pkg="joy" type="joy_node" name="joy_node">
    	<param name="dev" value="/dev/input/js0" />
    	<param name="deadzone" value="0.3" />
    	<param name="autorepeat_rate" value="20" />
  </node>

  <node pkg="teleop_twist_joy" name="teleop_twist_joy" type="teleop_node">
    <rosparam command="load" file="$(find teleop_twist_joy)/config/ps3.config.yaml" />
    <remap from="cmd_vel" to="cmd_vel_joy" />
  </node>
  
</launch> 
